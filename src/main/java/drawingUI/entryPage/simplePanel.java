package drawingUI.entryPage;

import SQLDatabase.connectDB;
import com.sun.tools.javac.comp.Flow;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.sql.*;

public class simplePanel extends JPanel {

    //create component
    protected Entry bsl = new Entry("Blood Sugar Level: ");

    public simplePanel() {
        //set labels of entries

//        //button actions for back and enter
//        enter.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                System.out.println("Enter log");        //change once other pages are ready
//                String input_date = date.getInfo();     //save input data
//                String input_time = time.getInfo();
//                String input_bsl = bsl.getInfo();
//
//                SimpleDateFormat sdf1 = new SimpleDateFormat("MM-dd-yyyy");//convert string input date to sql.date format
//                java.util.Date date = null;
//                try {
//                    date = sdf1.parse(input_date);
//                } catch (ParseException ex) {
//                    ex.printStackTrace();
//                }
//                java.sql.Date sqlDate = new java.sql.Date(date.getTime());
//
//                SimpleDateFormat df = new SimpleDateFormat("HH:mm");//convert string input time to sql.time format
//                java.util.Date time = null;
//                try {
//                    time = df.parse(input_time);
//                } catch (ParseException ex) {
//                    ex.printStackTrace();
//                }
//                java.sql.Time sqltime = new java.sql.Time(time.getTime());
//
//                int ibsl = Integer.parseInt(input_bsl);//convert string bsl to integer
//
//
//                Connection conn = connectDB.connect();//set the connect
//                String Simple_table = "CREATE TABLE IF NOT EXISTS patient(id SERIAL primary key,Date date NOT NULL, Time time NOT NULL,bsl integer)";
//                CreateTable.create(Simple_table, conn);
//
//                long id = 0;
//                try {
//                    PreparedStatement stmt = conn.prepareStatement("INSERT INTO patient(date,time,bsl)" + "VALUES(?,?,?)", Statement.RETURN_GENERATED_KEYS);
//                    stmt.setDate(1, sqlDate);
//                    stmt.setTime(2, sqltime);
//                    stmt.setInt(3, ibsl); //insert date into the table
//                    int affectedRows = stmt.executeUpdate();
//                    System.out.println(affectedRows);
//                    // check the affected rows
//                    if (affectedRows > 0) {
//                        // get the ID back
//                        try (ResultSet rs = stmt.getGeneratedKeys()) {
//                            if (rs.next()) {
//                                id = rs.getLong(1);//get the autogenerated id for postgresql
//                            }
//                        } catch (SQLException ex) {
//                            System.out.println(ex.getMessage());
//                        }
//                    }
//                } catch (SQLException ex) {
//                    System.out.println(ex.getMessage());
//
//                }
//            }
//        });
//
//
//
        FlowLayout layout = new FlowLayout(FlowLayout.LEFT);
        this.setLayout(layout);
//        setBorder(BorderFactory.createLineBorder(Color.black));
        add(bsl);

    }
}
