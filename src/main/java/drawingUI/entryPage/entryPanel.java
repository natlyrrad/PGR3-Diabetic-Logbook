package drawingUI.entryPage;

import SQLDatabase.connectDB;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import drawingUI.entryPage.Entry;

public class entryPanel extends JPanel implements ActionListener{                        //shows date, select time, button to pick method, back and enter
    //create all components
    JLabel date = new JLabel();
    Entry time = new Entry();
    JButton back = new JButton("< Back");
    JButton enter = new JButton("Enter");
    JButton localTime = new JButton("Current Time");
    JRadioButton simple = new JRadioButton("Simple Method", true);
    JRadioButton comp = new JRadioButton("Comprehensive Method");
    JRadioButton inten = new JRadioButton("Intensive Method");

    simplePanel p1 = new simplePanel();
    compPanel p2 = new compPanel();
    public intenPanel p3 = new intenPanel();


    public entryPanel(){
        //set labels of entries
        date.setText("  Date:   " + LocalDate.now().format(DateTimeFormatter.ofPattern("dd-MM-yy")));       //change into fetching date
        time.newEntry("Time: ");

        //button actions for back and enter
        back.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                System.out.println("Back to view");     //change once other pages are ready
            }
        });
        enter.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
//                System.out.println("Enter log");        //change once other pages are ready
//                String input_date = date.getInfo();     //save input data
//                String input_time = time.getInfo();
//
//                SimpleDateFormat sdf1 = new SimpleDateFormat("MM-dd-yyyy");//convert string input date to sql.date format
//                java.util.Date date = null;
//                try {
//                    date = sdf1.parse(input_date);
//                } catch (ParseException ex) {
//                    ex.printStackTrace();
//                }
//                java.sql.Date sqlDate = new java.sql.Date(date.getTime());
//
//                SimpleDateFormat df = new SimpleDateFormat("HH:mm");//convert string input time to sql.time format
//                java.util.Date time= null;
//                try {
//                    time=df.parse(input_time);
//                } catch (ParseException ex) {
//                    ex.printStackTrace();
//                }
//                java.sql.Time sqltime = new java.sql.Time(time.getTime());
//
//                int ibsl = Integer.parseInt(input_bsl);//convert string bsl to integer
//
//
//                Connection conn = connectDB.connect();//set the connect
//                String Simple_table="CREATE TABLE IF NOT EXISTS patient(id SERIAL primary key,Date date NOT NULL, Time time NOT NULL,bsl integer)";
//                CreateTable.create(Simple_table,conn);
//
//                long id = 0;
//                try {
//                    PreparedStatement stmt = conn.prepareStatement("INSERT INTO patient(date,time,bsl)" + "VALUES(?,?,?)", Statement.RETURN_GENERATED_KEYS);
//                    stmt.setDate(1, sqlDate);
//                    stmt.setTime(2, sqltime);
//                    stmt.setInt(3, ibsl); //insert date into the table
//                    int affectedRows = stmt.executeUpdate();
//                    System.out.println(affectedRows);
//                    // check the affected rows
//                    if (affectedRows > 0) {
//                        // get the ID back
//                        try (ResultSet rs = stmt.getGeneratedKeys()) {
//                            if (rs.next()) {
//                                id = rs.getLong(1);//get the autogenerated id for postgresql
//                            }
//                        } catch (SQLException ex) {
//                            System.out.println(ex.getMessage());
//                        }
//                    }
//                } catch (SQLException ex) {
//                    System.out.println(ex.getMessage());
//
//                }
            }
        });


        //button actions to get local time
        localTime.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                String t = LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm"));
                time.setInfo(t);            //collect data to db
            }
        });

        //choosing input method
        simple.addActionListener(this);
        comp.addActionListener(this);
        inten.addActionListener(this);

        //grouping method radiobuttons
        ButtonGroup methods = new ButtonGroup();
        methods.add(simple);
        methods.add(comp);
        methods.add(inten);

        //create metPanel
        JPanel metPanel = new JPanel(new GridLayout(0,1));
        metPanel.add(simple);
        metPanel.add(comp);
        metPanel.add(inten);

        //add components with layout
        //https://examples.javacodegeeks.com/desktop-java/swing/java-swing-layout-example/
        GridBagLayout layout = new GridBagLayout();
        this.setLayout(layout);
        GridBagConstraints c = new GridBagConstraints();
        c.insets = new Insets(10, 10, 10, 10);          //From maria


        // position components
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;
        c.gridy = 0;
        add(back, c);

        c.gridx = 1;
        c.gridy = 1;
        add(date, c);

        c.gridx = 1;
        c.gridy = 2;
        add(time, c);

        c.gridx = 2;
        c.gridy = 2;
        add(localTime, c);

        c.gridx = 3;
        c.gridy = 1;
        c.gridheight = 2;
        add(metPanel, c);

        c.gridx = 1;
        c.gridy = 3;
        c.gridheight = 1;
        c.gridwidth = 3;
        add(p1, c);
        p1.setVisible(true);

        c.gridx = 1;
        c.gridy = 4;
        c.gridheight = 1;
        c.gridwidth = 3;
        add(p2, c);
        p2.setVisible(false);

        c.gridx = 1;
        c.gridy = 5;
        c.gridheight = 1;
        c.gridwidth = 3;
        add(p3, c);
        p3.setVisible(false);

        c.gridx = 3;
        c.gridy = 6;
        add(enter, c);

    }

    //radio buttons to select method
    @Override
    public void actionPerformed(ActionEvent e) {
        if(simple.isSelected()){
//            JOptionPane.showMessageDialog(this,"You are Male.");
//            System.out.println("You are Male");
            p1.setVisible(true);
            p2.setVisible(false);
            p3.setVisible(false);
        }
        if(comp.isSelected()){
//            JOptionPane.showMessageDialog(this,"You are Female.");
            p1.setVisible(true);
            p2.setVisible(true);
            p3.setVisible(false);
        }
        if(inten.isSelected()){
//            JOptionPane.showMessageDialog(this,"Intensive");
            p1.setVisible(true);
            p2.setVisible(true);
            p3.setVisible(true);
        }
    }

}
